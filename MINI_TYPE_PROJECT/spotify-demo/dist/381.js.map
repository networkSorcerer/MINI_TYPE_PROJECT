{"version":3,"file":"381.js?ver=4e4791287460de6d15f9","mappings":"mLAAO,MAAMA,EAAmBC,kBAAYD,iBCA/BE,EAAeD,kBAAYE,4BAC3BC,EAAWH,kBAAYI,4BCUvBC,EACXC,UACEC,QAAQC,IAAI,YAAaL,GACzBI,QAAQC,IAAI,gBAAiBP,GAE7B,IACE,MAAMQ,EAAO,IAAIC,gBAAgB,CAC/BC,WAAY,uBAcd,aAZuBC,EAAAA,EAAMC,KAC3B,yCACAJ,EACA,CACEK,QAAS,CACPC,cAAe,SAAFC,QArBHC,EAsBRd,EAAW,IAAMF,EArBP,oBAAXiB,OACFC,KAAKF,GAELG,OAAOC,KAAKJ,GAAMK,SAAS,YAoB1B,eAAgB,wCAINL,IAClB,CAAE,MAAOM,GACP,MAAM,IAAIC,MAAM,wCAClB,CA/BkBP,OCatB,EAb0BQ,KACxB,MAAMC,ECFyBC,MAC/B,MAAM,KAAEV,IAASW,EAAAA,EAAAA,GAAS,CACxBC,SAAU,CAAC,2BACXC,QAASzB,IAIX,OAD8BY,aAAI,EAAJA,EAAMc,cDJNJ,GAC9B,OAAOC,EAAAA,EAAAA,GAAS,CACdC,SAAU,CAAC,eACXC,QAASxB,UACP,IAAKoB,EACH,MAAM,IAAIF,MAAM,sBAElB,MERwBlB,WAG5B,IAUE,aATuBM,EAAAA,EAAMoB,IAAI,GAADhB,OAC3BjB,EAAgB,+BACnB,CACEe,QAAS,CACPC,cAAe,uBAAFC,OACTU,OAIMT,IAClB,CAAE,MAAOM,GACP,MAAM,IAAIC,MAAM,2BAClB,GFRWS,CAAeP,O,cGR5B,MAWA,EAXoBQ,KAClB,MAAM,KAAEjB,EAAI,MAAEM,EAAK,UAAEY,GAAcV,IACnC,OACEW,EAAAA,EAAAA,KAAA,OAAAC,UACED,EAAAA,EAAAA,KAACE,EAAAA,EAAU,CAACC,QAAQ,KAAKC,WAAW,MAAKH,SAAC,2BCGhD,EARiBI,KAEbL,EAAAA,EAAAA,KAAA,OAAAC,UACED,EAAAA,EAAAA,KAACF,EAAW,K","sources":["webpack://spotify-demo/./src/configs/commonConfig.ts","webpack://spotify-demo/./src/configs/authConfig.ts","webpack://spotify-demo/./src/apis/authApi.ts","webpack://spotify-demo/./src/hooks/useGetNewReleases.ts","webpack://spotify-demo/./src/hooks/useClientCredentialToken.ts","webpack://spotify-demo/./src/apis/albumApi.ts","webpack://spotify-demo/./src/pages/HomePage/components/NewReleases.tsx","webpack://spotify-demo/./src/pages/HomePage/HopePage.tsx"],"sourcesContent":["export const SPOTIFY_BASE_URL = process.env.SPOTIFY_BASE_URL;\r\n","export const clientSecret = process.env.REACT_APP_SPOTIFY_CLIENT_ID;\r\nexport const clientId = process.env.REACT_APP_SPOTIFY_SECRET_ID;\r\n","import axios from \"axios\";\r\nimport { clientId, clientSecret } from \"../configs/authConfig\";\r\nimport { ClientCredentialTokenResponse } from \"../models/auth\";\r\n\r\nconst encodeBase64 = (data: string): string => {\r\n  if (typeof window !== \"undefined\") {\r\n    return btoa(data);\r\n  } else {\r\n    return Buffer.from(data).toString(\"base64\");\r\n  }\r\n};\r\nexport const getClientCredentialToken =\r\n  async (): Promise<ClientCredentialTokenResponse> => {\r\n    console.log(\"clientId:\", clientId);\r\n    console.log(\"clientSecret:\", clientSecret);\r\n\r\n    try {\r\n      const body = new URLSearchParams({\r\n        grant_type: \"client_credentials\",\r\n      });\r\n      const response = await axios.post(\r\n        \"https://accounts.spotify.com/api/token\",\r\n        body,\r\n        {\r\n          headers: {\r\n            Authorization: `Basic ${encodeBase64(\r\n              clientId + \":\" + clientSecret\r\n            )}`,\r\n            \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n          },\r\n        }\r\n      );\r\n      return response.data;\r\n    } catch (error) {\r\n      throw new Error(\"Fail to fetch client credential token\");\r\n    }\r\n  };\r\n","import { useQuery } from \"@tanstack/react-query\";\r\nimport { getNewReleases } from \"../apis/albumApi\";\r\nimport useClientCredentialToken from \"./useClientCredentialToken\";\r\n\r\nconst useGetNewReleases = () => {\r\n  const clientCredentialToken = useClientCredentialToken();\r\n  return useQuery({\r\n    queryKey: [\"new-release\"],\r\n    queryFn: async () => {\r\n      if (!clientCredentialToken) {\r\n        throw new Error(\"No token available\");\r\n      }\r\n      return getNewReleases(clientCredentialToken);\r\n    },\r\n  });\r\n};\r\n\r\nexport default useGetNewReleases;\r\n","import { useQuery } from \"@tanstack/react-query\";\r\nimport { getClientCredentialToken } from \"../apis/authApi\";\r\n\r\nconst useClientCredentialToken = (): string | undefined => {\r\n  const { data } = useQuery({\r\n    queryKey: [\"client-credential=token\"],\r\n    queryFn: getClientCredentialToken,\r\n  });\r\n\r\n  const ClientCredentialToken = data?.access_token;\r\n  return ClientCredentialToken;\r\n};\r\n\r\nexport default useClientCredentialToken;\r\n","import axios from \"axios\";\r\nimport { SPOTIFY_BASE_URL } from \"../configs/commonConfig\";\r\nimport { getNewReleasesResponse } from \"../models/album\";\r\n\r\nexport const getNewReleases = async (\r\n  clientCredentialToken: string\r\n): Promise<getNewReleasesResponse> => {\r\n  try {\r\n    const response = await axios.get(\r\n      `${SPOTIFY_BASE_URL}/browse/new-release?limit=6`,\r\n      {\r\n        headers: {\r\n          Authorization: `Bearer\r\n            ${clientCredentialToken}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    throw new Error(\"Fail to fetch ew release\");\r\n  }\r\n};\r\n","import { Typography } from \"@mui/material\";\r\nimport React from \"react\";\r\nimport useGetNewReleases from \"../../../hooks/useGetNewReleases\";\r\n\r\nconst NewReleases = () => {\r\n  const { data, error, isLoading } = useGetNewReleases();\r\n  return (\r\n    <div>\r\n      <Typography variant=\"h1\" paddingTop=\"8px\">\r\n        New Released Albums\r\n      </Typography>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewReleases;\r\n","import React from 'react';\r\nimport NewReleases from './components/NewReleases';\r\n\r\nconst HomePage = () => {\r\n  return (\r\n    <div>\r\n      <NewReleases />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n"],"names":["SPOTIFY_BASE_URL","process","clientSecret","REACT_APP_SPOTIFY_CLIENT_ID","clientId","REACT_APP_SPOTIFY_SECRET_ID","getClientCredentialToken","async","console","log","body","URLSearchParams","grant_type","axios","post","headers","Authorization","concat","data","window","btoa","Buffer","from","toString","error","Error","useGetNewReleases","clientCredentialToken","useClientCredentialToken","useQuery","queryKey","queryFn","access_token","get","getNewReleases","NewReleases","isLoading","_jsx","children","Typography","variant","paddingTop","HomePage"],"sourceRoot":""}