{"version":3,"file":"537.js?ver=1064d07e627c172cf1fe","mappings":"2MAGA,MCcA,EAb0BA,KACxB,MAAMC,EDFyBC,MAC/B,MAAM,KAAEC,IAASC,EAAAA,EAAAA,GAAS,CACxBC,SAAU,CAAC,2BACXC,QAASC,EAAAA,IAGX,OAD8BJ,aAAI,EAAJA,EAAMK,cCHNN,GAC9B,OAAOE,EAAAA,EAAAA,GAAS,CACdC,SAAU,CAAC,gBACXC,QAASG,UACP,IAAKR,EACH,MAAM,IAAIS,MAAM,sBAElB,MCRuBD,WAG3B,IASE,aARuBE,EAAAA,EAAMC,IAAI,GAADC,OAC3BC,EAAAA,EAAgB,gCACnB,CACEC,QAAS,CACPC,cAAe,UAAFH,OAAYZ,OAIfE,IAClB,CAAE,MAAOc,GACP,MAAM,IAAIP,MAAM,+BAClB,GDPWQ,CAAcjB,O,kCEJ3B,MAIA,EAJqBkB,IAAyC,IAAxC,aAAEC,GAAiCD,EACvD,OAAOE,EAAAA,EAAAA,KAACC,EAAAA,EAAK,CAACC,SAAS,QAAOC,SAAEJ,K,4CCClC,MAkDA,EAlDaD,IAA4C,IAA3C,MAAEM,EAAK,KAAEC,EAAI,WAAEC,GAAuBR,EAClD,OACES,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CACFC,GAAI,CACFC,SAAU,WACVC,aAAc,EACdC,SAAU,SACVC,UAAW,EACXC,OAAQ,UACR,uBAAwB,CACtBC,QAAS,EACTC,UAAW,aAEbb,SAAA,EAEFH,EAAAA,EAAAA,KAAA,OACEiB,IAAKb,EACLc,IAAKb,EACLc,MAAO,CAAEC,MAAO,OAAQC,QAAS,QAASC,OAAQ,WAIpDtB,EAAAA,EAAAA,KAACuB,EAAAA,EAAU,CACTC,UAAU,cACVf,GAAI,CACFC,SAAU,WACVe,IAAK,MACLC,KAAM,MACNV,UAAW,iCACXW,QAAS,uBACTC,MAAO,QACPb,QAAS,EACTc,WAAY,gBACZ,UAAW,CACTF,QAAS,QACTX,UAAW,qCAGf,aAAW,OACXc,QAASA,IAAMC,MAAM,eAADvC,OAAgBa,IAAQF,UAE5CH,EAAAA,EAAAA,KAACgC,EAAAA,EAAa,CAACC,SAAS,aAG1BjC,EAAAA,EAAAA,KAACkC,EAAAA,EAAU,CAAA/B,SAAEE,KACbL,EAAAA,EAAAA,KAACkC,EAAAA,EAAU,CAAA/B,SAAEG,QCdnB,EAjCoB6B,KAClB,MAAM,KAAErD,EAAI,MAAEc,EAAK,UAAEwC,GAAczD,IAEnC,OADA0D,QAAQC,IAAI,MAAOxD,GACfsD,GACKpC,EAAAA,EAAAA,KAACuC,EAAAA,EAAa,IAEnB3C,GACKI,EAAAA,EAAAA,KAACwC,EAAY,CAACzC,aAAcH,EAAM6C,WAGzClC,EAAAA,EAAAA,MAAA,OAAAJ,SAAA,EACEH,EAAAA,EAAAA,KAACkC,EAAAA,EAAU,CAACQ,QAAQ,KAAKC,WAAW,MAAKxC,SAAC,wBAGzCrB,GAAQA,EAAK8D,OAAOC,MAAMC,OAAS,GAClC9C,EAAAA,EAAAA,KAAC+C,EAAAA,EAAK,CAACC,WAAS,EAACC,QAAS,EAAE9C,SACzBrB,EAAK8D,OAAOC,MAAMK,KAAKC,IACtBnD,EAAAA,EAAAA,KAAC+C,EAAAA,EAAK,CAACK,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAEnD,UACzBH,EAAAA,EAAAA,KAACuD,EAAI,CACHnD,MAAO+C,EAAMK,OAAO,GAAGC,IACvBpD,KAAM8C,EAAM9C,KACZC,WAAY6C,EAAMO,QAAQ,GAAGrD,QAJA8C,EAAMQ,SAU3C3D,EAAAA,EAAAA,KAACkC,EAAAA,EAAU,CAACQ,QAAQ,KAAIvC,SAAC,gBCxBjC,EARiByD,KAEb5D,EAAAA,EAAAA,KAAA,OAAAG,UACEH,EAAAA,EAAAA,KAACmC,EAAW,K","sources":["webpack://spotify-demo/./src/hooks/useClientCredentialToken.ts","webpack://spotify-demo/./src/hooks/useGetNewReleases.ts","webpack://spotify-demo/./src/apis/albumApi.ts","webpack://spotify-demo/./src/common/components/ErrorMessage.tsx","webpack://spotify-demo/./src/common/components/Card.tsx","webpack://spotify-demo/./src/pages/HomePage/components/NewReleases.tsx","webpack://spotify-demo/./src/pages/HomePage/HopePage.tsx"],"sourcesContent":["import { useQuery } from \"@tanstack/react-query\";\r\nimport { getClientCredentialToken } from \"../apis/authApi\";\r\n\r\nconst useClientCredentialToken = (): string | undefined => {\r\n  const { data } = useQuery({\r\n    queryKey: [\"client-credential-token\"],\r\n    queryFn: getClientCredentialToken,\r\n  });\r\n  const ClientCredentialToken = data?.access_token;\r\n  return ClientCredentialToken;\r\n};\r\n\r\nexport default useClientCredentialToken;","import { useQuery } from \"@tanstack/react-query\";\r\nimport { getNewRelease } from \"../apis/albumApi\";\r\nimport useClientCredentialToken from \"./useClientCredentialToken\";\r\n\r\nconst useGetNewReleases = () => {\r\n  const clientCredentialToken = useClientCredentialToken();\r\n  return useQuery({\r\n    queryKey: [\"new-releases\"],\r\n    queryFn: async () => {\r\n      if (!clientCredentialToken) {\r\n        throw new Error(\"No token available\");\r\n      }\r\n      return getNewRelease(clientCredentialToken);\r\n    },\r\n  });\r\n};\r\n\r\nexport default useGetNewReleases;\r\n","import axios from \"axios\";\r\nimport { SPOTIFY_BASE_URL } from \"../configs/commonConfig\";\r\nimport { getNewReleaseResponse } from \"../models/album\";\r\n\r\nexport const getNewRelease = async (\r\n  clientCredentialToken: string\r\n): Promise<getNewReleaseResponse> => {\r\n  try {\r\n    const response = await axios.get(\r\n      `${SPOTIFY_BASE_URL}/browse/new-releases?limit=6`,\r\n      {\r\n        headers: {\r\n          Authorization: `Bearer ${clientCredentialToken}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    throw new Error(\"Failed to fetch new releases\");\r\n  }\r\n};\r\n\r\nexport default getNewRelease;\r\n","import { Alert } from \"@mui/material\";\r\n\r\nimport React from \"react\";\r\n\r\ninterface ErrorMessageProps {\r\n  errorMessage: string;\r\n}\r\n\r\nconst ErrorMessage = ({ errorMessage }: ErrorMessageProps) => {\r\n  return <Alert severity=\"error\">{errorMessage}</Alert>;\r\n};\r\n\r\nexport default ErrorMessage;\r\n","import { Typography, IconButton, Box } from \"@mui/material\";\r\nimport React from \"react\";\r\nimport PlayArrowIcon from \"@mui/icons-material/PlayArrow\";\r\n\r\ninterface CardProps {\r\n  name: string;\r\n  image: string;\r\n  artistName: string | undefined;\r\n}\r\n\r\nconst Card = ({ image, name, artistName }: CardProps) => {\r\n  return (\r\n    <Box\r\n      sx={{\r\n        position: \"relative\",\r\n        borderRadius: 2,\r\n        overflow: \"hidden\",\r\n        boxShadow: 3,\r\n        cursor: \"pointer\",\r\n        \"&:hover .play-button\": {\r\n          opacity: 1,\r\n          transform: \"scale(1)\",\r\n        },\r\n      }}\r\n    >\r\n      <img\r\n        src={image}\r\n        alt={name}\r\n        style={{ width: \"100%\", display: \"block\", height: \"auto\" }}\r\n      />\r\n\r\n      {/* 재생 버튼: 기본적으로 숨겨져 있다가 hover 시 보임 */}\r\n      <IconButton\r\n        className=\"play-button\"\r\n        sx={{\r\n          position: \"absolute\",\r\n          top: \"50%\",\r\n          left: \"50%\",\r\n          transform: \"translate(-50%, -50%) scale(0)\",\r\n          bgcolor: \"rgba(0, 128, 0, 0.8)\", // 초록색 배경\r\n          color: \"white\",\r\n          opacity: 0,\r\n          transition: \"all 0.3s ease\",\r\n          \"&:hover\": {\r\n            bgcolor: \"green\",\r\n            transform: \"translate(-50%, -50%) scale(1.1)\",\r\n          },\r\n        }}\r\n        aria-label=\"play\"\r\n        onClick={() => alert(`Play album: ${name}`)}\r\n      >\r\n        <PlayArrowIcon fontSize=\"large\" />\r\n      </IconButton>\r\n\r\n      <Typography>{name}</Typography>\r\n      <Typography>{artistName}</Typography>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import { Typography } from \"@mui/material\";\r\nimport React from \"react\";\r\nimport useGetNewReleases from \"../../../hooks/useGetNewReleases\";\r\nimport LoadingScreen from \"../../../common/components/LoadingScreen\";\r\nimport ErrorMessage from \"../../../common/components/ErrorMessage\";\r\nimport Grid2 from \"@mui/material/Unstable_Grid2\";\r\nimport Card from \"../../../common/components/Card\";\r\n\r\nconst NewReleases = () => {\r\n  const { data, error, isLoading } = useGetNewReleases();\r\n  console.log(\"ddd\", data);\r\n  if (isLoading) {\r\n    return <LoadingScreen />;\r\n  }\r\n  if (error) {\r\n    return <ErrorMessage errorMessage={error.message} />;\r\n  }\r\n  return (\r\n    <div>\r\n      <Typography variant=\"h1\" paddingTop=\"8px\">\r\n        New Released Albums\r\n      </Typography>\r\n      {data && data.albums.items.length > 0 ? (\r\n        <Grid2 container spacing={2}>\r\n          {data.albums.items.map((album) => (\r\n            <Grid2 xs={6} sm={4} md={2} key={album.id}>\r\n              <Card\r\n                image={album.images[0].url}\r\n                name={album.name}\r\n                artistName={album.artists[0].name}\r\n              ></Card>\r\n            </Grid2>\r\n          ))}\r\n        </Grid2>\r\n      ) : (\r\n        <Typography variant=\"h2\">NO DATA</Typography>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewReleases;\r\n","import React from 'react';\r\nimport NewReleases from './components/NewReleases';\r\n\r\nconst HomePage = () => {\r\n  return (\r\n    <div>\r\n      <NewReleases />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n"],"names":["useGetNewReleases","clientCredentialToken","useClientCredentialToken","data","useQuery","queryKey","queryFn","getClientCredentialToken","access_token","async","Error","axios","get","concat","SPOTIFY_BASE_URL","headers","Authorization","error","getNewRelease","_ref","errorMessage","_jsx","Alert","severity","children","image","name","artistName","_jsxs","Box","sx","position","borderRadius","overflow","boxShadow","cursor","opacity","transform","src","alt","style","width","display","height","IconButton","className","top","left","bgcolor","color","transition","onClick","alert","PlayArrowIcon","fontSize","Typography","NewReleases","isLoading","console","log","LoadingScreen","ErrorMessage","message","variant","paddingTop","albums","items","length","Grid2","container","spacing","map","album","xs","sm","md","Card","images","url","artists","id","HomePage"],"sourceRoot":""}